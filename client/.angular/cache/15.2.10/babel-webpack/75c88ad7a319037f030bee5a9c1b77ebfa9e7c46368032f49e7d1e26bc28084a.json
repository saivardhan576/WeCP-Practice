{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/http.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../services/auth.service\";\nimport * as i5 from \"@angular/common\";\nfunction AddcargoComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"span\");\n    i0.ɵɵtext(2, \"Invalid Content\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddcargoComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"span\");\n    i0.ɵɵtext(2, \"Invalid Size\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddcargoComponent_tr_60_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function AddcargoComponent_tr_60_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const cargo_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.addDriver(cargo_r6));\n    });\n    i0.ɵɵtext(11, \"Assign\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cargo_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cargo_r6.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cargo_r6.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cargo_r6.size);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cargo_r6.status);\n  }\n}\nfunction AddcargoComponent_option_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const driver_r9 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", driver_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(driver_r9.name);\n  }\n}\nfunction AddcargoComponent_div_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.responseMessage, \" \");\n  }\n}\nfunction AddcargoComponent_div_74_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.errorMessage, \" \");\n  }\n}\nexport class AddcargoComponent {\n  constructor(router, httpService, formBuilder, authService) {\n    this.router = router;\n    this.httpService = httpService;\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.formModel = {\n      status: null\n    };\n    this.showError = false;\n    this.cargList = [];\n    this.assignModel = {};\n    this.driverList = [];\n    this.itemForm = this.formBuilder.group({\n      content: [this.formModel.username, [Validators.required]],\n      size: [this.formModel.password, [Validators.required]],\n      status: [this.formModel.password, [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.getCargo();\n    this.getDrivers();\n    this.assignModel.driverId = null;\n  }\n  getCargo() {\n    this.cargList = [];\n    this.httpService.getCargo().subscribe(data => {\n      this.cargList = data;\n      console.log(this.cargList);\n    }, error => {\n      // Handle error\n      this.showError = true;\n      this.errorMessage = \"An error occurred while logging in. Please try again later.\";\n      console.error('Login error:', error);\n    });\n    ;\n  }\n  getDrivers() {\n    this.driverList = [];\n    this.httpService.getDrivers().subscribe(data => {\n      this.driverList = data;\n      console.log(this.driverList);\n    }, error => {\n      // Handle error\n      this.showError = true;\n      this.errorMessage = \"An error occurred while logging in. Please try again later.\";\n      console.error('Login error:', error);\n    });\n    ;\n  }\n  onSubmit() {\n    if (this.itemForm.valid) {\n      if (this.itemForm.valid) {\n        this.showError = false;\n        this.httpService.addCargo(this.itemForm.value).subscribe(data => {\n          this.itemForm.reset();\n          this.getCargo();\n        }, error => {\n          // Handle error\n          this.showError = true;\n          this.errorMessage = \"An error occurred while logging in. Please try again later.\";\n          console.error('Login error:', error);\n        });\n        ;\n      } else {\n        this.itemForm.markAllAsTouched();\n      }\n    } else {\n      this.itemForm.markAllAsTouched();\n    }\n  }\n  addDriver(value) {\n    this.assignModel.cargoId = value.id;\n  }\n  assignDriver() {\n    if (this.assignModel.driverId != null) {\n      this.showMessage = false;\n      this.httpService.assignDriver(this.assignModel.driverId, this.assignModel.cargoId).subscribe(data => {\n        debugger;\n        this.showMessage = true;\n        this.responseMessage = data.message;\n        ;\n      }, error => {\n        // Handle error\n        this.showError = true;\n        this.errorMessage = \"An error occurred while logging in. Please try again later.\";\n        console.error('Login error:', error);\n      });\n      ;\n    }\n  }\n  static #_ = this.ɵfac = function AddcargoComponent_Factory(t) {\n    return new (t || AddcargoComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddcargoComponent,\n    selectors: [[\"app-addcargo\"]],\n    decls: 80,\n    vars: 8,\n    consts: [[1, \"d-flex\", \"justify-content-between\", \"mt-4\"], [1, \"mb-0\"], [1, \"row\", \"mt-3\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"mb-3\", \"mt-md-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"mb-3\"], [\"for\", \"content\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"content\", \"formControlName\", \"content\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"size\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"size\", \"formControlName\", \"size\"], [\"for\", \"status\", 1, \"form-label\"], [\"name\", \"status\", \"formControlName\", \"status\"], [\"value\", \"null\"], [\"value\", \"Order Pending\"], [\"value\", \"Order Assigned\"], [\"value\", \"Order Delivered\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-dark\", \"mt-1\"], [1, \"table-responsive\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"driverModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"driverModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"driverModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"name\", \"\", \"id\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-success mt-4\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"error\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#driverModal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"value\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"mt-4\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n    template: function AddcargoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Manage Cargo\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4);\n        i0.ɵɵtext(6, \" Add New Cargo \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function AddcargoComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"label\", 10);\n        i0.ɵɵtext(13, \"Content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 11);\n        i0.ɵɵtemplate(15, AddcargoComponent_div_15_Template, 3, 0, \"div\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"div\", 9)(18, \"label\", 13);\n        i0.ɵɵtext(19, \"Size\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 14);\n        i0.ɵɵtemplate(21, AddcargoComponent_div_21_Template, 3, 0, \"div\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 8)(23, \"div\", 9)(24, \"label\", 15);\n        i0.ɵɵtext(25, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"select\", 16)(27, \"option\", 17);\n        i0.ɵɵtext(28, \"Choose Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"option\", 18);\n        i0.ɵɵtext(30, \"PENDING\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 19);\n        i0.ɵɵtext(32, \"ASSIGNED \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"option\", 20);\n        i0.ɵɵtext(34, \"DELIVERED\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(35, \"div\", 8)(36, \"div\", 21);\n        i0.ɵɵelement(37, \"br\");\n        i0.ɵɵelementStart(38, \"button\", 22);\n        i0.ɵɵtext(39, \"Submit\");\n        i0.ɵɵelementEnd()()()()()()()();\n        i0.ɵɵelementStart(40, \"div\", 2)(41, \"div\", 3)(42, \"div\", 4);\n        i0.ɵɵtext(43, \"Cargo Information\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(44, \"div\", 5)(45, \"div\", 23)(46, \"table\", 24)(47, \"thead\")(48, \"tr\")(49, \"th\");\n        i0.ɵɵtext(50, \"Sr#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"th\");\n        i0.ɵɵtext(52, \"Content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"th\");\n        i0.ɵɵtext(54, \"Size\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"th\");\n        i0.ɵɵtext(56, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"th\");\n        i0.ɵɵtext(58, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(59, \"tbody\");\n        i0.ɵɵtemplate(60, AddcargoComponent_tr_60_Template, 12, 4, \"tr\", 25);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(61, \"div\", 26)(62, \"div\", 27)(63, \"div\", 28)(64, \"div\", 29)(65, \"h5\", 30);\n        i0.ɵɵtext(66, \"Assign Driver \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(67, \"button\", 31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"div\", 32)(69, \"select\", 33);\n        i0.ɵɵlistener(\"ngModelChange\", function AddcargoComponent_Template_select_ngModelChange_69_listener($event) {\n          return ctx.assignModel.driverId = $event;\n        });\n        i0.ɵɵelementStart(70, \"option\", 17);\n        i0.ɵɵtext(71, \"Choose Driver\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(72, AddcargoComponent_option_72_Template, 2, 2, \"option\", 34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(73, AddcargoComponent_div_73_Template, 2, 1, \"div\", 35);\n        i0.ɵɵtemplate(74, AddcargoComponent_div_74_Template, 2, 1, \"div\", 36);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(75, \"div\", 37)(76, \"button\", 38);\n        i0.ɵɵtext(77, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(78, \"button\", 39);\n        i0.ɵɵlistener(\"click\", function AddcargoComponent_Template_button_click_78_listener() {\n          return ctx.assignDriver();\n        });\n        i0.ɵɵtext(79, \"Save\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.itemForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.itemForm.get(\"content\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx.itemForm.get(\"content\")) == null ? null : tmp_1_0.hasError(\"required\")));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.itemForm.get(\"size\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.itemForm.get(\"size\")) == null ? null : tmp_2_0.hasError(\"required\")));\n        i0.ɵɵadvance(39);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cargList);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.assignModel.driverId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.driverList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.FormGroupDirective, i3.FormControlName],\n    encapsulation: 2\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","AddcargoComponent","constructor","router","httpService","formBuilder","authService","status","itemForm","group","content","formModel","username","required","size","password","ngOnInit","getCargo","getDrivers","assignModel","driverId","cargList","subscribe","data","console","log","error","showError","errorMessage","driverList","onSubmit","valid","addCargo","value","reset","markAllAsTouched","addDriver","cargoId","id","assignDriver","showMessage","responseMessage","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ubuntu/root/client/src/app/addcargo/addcargo.component.ts","/home/ubuntu/root/client/src/app/addcargo/addcargo.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { HttpService } from '../../services/http.service';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-addcargo',\r\n  templateUrl: './addcargo.component.html'\r\n \r\n})\r\nexport class AddcargoComponent implements OnInit {\r\n  itemForm: FormGroup;\r\n  formModel:any={status:null};\r\n  showError:boolean=false;\r\n  errorMessage:any;\r\n  cargList:any=[];\r\n  assignModel: any={};\r\n  driverList:any=[]\r\n  showMessage: any;\r\n  responseMessage: any;\r\n  constructor(public router:Router, public httpService:HttpService, private formBuilder: FormBuilder, private authService:AuthService) \r\n    {\r\n      this.itemForm = this.formBuilder.group({\r\n        content: [this.formModel.username,[ Validators.required]],\r\n        size: [this.formModel.password,[ Validators.required]],\r\n        status: [this.formModel.password,[ Validators.required]]\r\n       \r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n   this.getCargo();\r\n   this.getDrivers();\r\n   this.assignModel.driverId=null;\r\n  }\r\n  getCargo() {\r\n    this.cargList=[];\r\n    this.httpService.getCargo().subscribe((data: any) => {\r\n      this.cargList=data;\r\n      console.log(this.cargList);\r\n    }, error => {\r\n      // Handle error\r\n      this.showError = true;\r\n      this.errorMessage = \"An error occurred while logging in. Please try again later.\";\r\n      console.error('Login error:', error);\r\n    });;\r\n  }\r\n  getDrivers() {\r\n    this.driverList=[];\r\n    this.httpService.getDrivers().subscribe((data: any) => {\r\n      this.driverList=data;\r\n      console.log(this.driverList);\r\n    }, error => {\r\n      // Handle error\r\n      this.showError = true;\r\n      this.errorMessage = \"An error occurred while logging in. Please try again later.\";\r\n      console.error('Login error:', error);\r\n    });;\r\n  }\r\n \r\n  onSubmit()\r\n  {\r\n    if(this.itemForm.valid)\r\n    {\r\n      if (this.itemForm.valid) {\r\n        this.showError = false;\r\n        this.httpService.addCargo(this.itemForm.value).subscribe((data: any) => {\r\n          this.itemForm.reset();\r\n          this.getCargo();\r\n          \r\n        }, error => {\r\n          // Handle error\r\n          this.showError = true;\r\n          this.errorMessage = \"An error occurred while logging in. Please try again later.\";\r\n          console.error('Login error:', error);\r\n        });;\r\n      } else {\r\n        this.itemForm.markAllAsTouched();\r\n      }\r\n    }\r\n    else{\r\n      this.itemForm.markAllAsTouched();\r\n    }\r\n  }\r\n  addDriver(value:any)\r\n  {\r\n    this.assignModel.cargoId=value.id\r\n  }\r\n  assignDriver()\r\n  {\r\n    if(this.assignModel.driverId!=null)\r\n    {\r\n      this.showMessage = false;\r\n      this.httpService.assignDriver(this.assignModel.driverId,this.assignModel.cargoId).subscribe((data: any) => {\r\n        debugger;\r\n        this.showMessage = true;\r\n        this.responseMessage=data.message;;\r\n      }, error => {\r\n        // Handle error\r\n        this.showError = true;\r\n        this.errorMessage = \"An error occurred while logging in. Please try again later.\";\r\n        console.error('Login error:', error);\r\n      });;\r\n    }\r\n  }\r\n  \r\n}\r\n","<div class=\"d-flex justify-content-between mt-4\">\r\n  <h2 class=\"mb-0\">Manage Cargo</h2>  \r\n\r\n</div>\r\n<div class=\"row mt-3\">\r\n  <div class=\"card\">\r\n      <div class=\"card-header\">\r\n      Add New Cargo\r\n        </div>\r\n      <div class=\"card-body\">\r\n          <form class=\"mb-3 mt-md-4\" [formGroup]=\"itemForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                  <div class=\"col-md-3\">\r\n                      <div class=\"mb-3\">\r\n                          <label for=\"content\" class=\"form-label \">Content</label>\r\n                          <!-- //create input with formControlName=content  with valdiation-->\r\n                          <input type = \"text\" name = \"content\" formControlName = \"content\">\r\n                          <div *ngIf=\"itemForm.get('content')?.touched && itemForm.get('content')?.hasError('required')\" class=\"error\">\r\n                            <span>Invalid Content</span>\r\n                          </div>\r\n                        </div>\r\n                  </div>\r\n                  <div class=\"col-md-3\">\r\n                      <div class=\"mb-3\">\r\n                          <label for=\"size\" class=\"form-label \">Size</label>\r\n                            <!-- //create input with formControlName=szie  with valdiation-->\r\n                            <input type = \"text\" name = \"size\" formControlName = \"size\">\r\n                          <div *ngIf=\"itemForm.get('size')?.touched && itemForm.get('size')?.hasError('required')\" class=\"error\">\r\n                            <span>Invalid Size</span>\r\n                          </div>\r\n                        </div>\r\n                  </div>\r\n                  <div class=\"col-md-3\">\r\n                      <div class=\"mb-3\">\r\n                          <label for=\"status\" class=\"form-label \">Status</label>\r\n                            <!-- //create select  with formControlName=status with valdiation-->\r\n                          <select name = \"status\" formControlName = \"status\">\r\n                            <option value=\"null\">Choose Status</option>\r\n                             <option value=\"Order Pending\">PENDING</option>\r\n                             <option value=\"Order Assigned\">ASSIGNED </option>\r\n                             <option value=\"Order Delivered\">DELIVERED</option>\r\n                          </select>\r\n                       \r\n                        </div>\r\n                  </div>\r\n                  <div class=\"col-md-3\">\r\n                      <div class=\"d-grid\">\r\n                          <br>\r\n                          <button class=\"btn btn-outline-dark mt-1\" type=\"submit\">Submit</button>\r\n                        </div>\r\n                  </div>\r\n              </div>\r\n            \r\n       \r\n            </form>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div class=\"row mt-3\">\r\n  <div class=\"card\">\r\n      <div class=\"card-header\">Cargo Information</div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n      <div class=\"table-responsive\">\r\n          <table class=\"table\">\r\n              <thead>\r\n                  <tr>\r\n                      <th>Sr#</th>\r\n                      <th>Content</th>\r\n                      <th>Size</th>\r\n                      <th>Status</th>\r\n                      <th>Action</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  <tr *ngFor=\"let cargo of cargList\">\r\n                      <td>{{cargo.id}}</td>\r\n                      <td>{{cargo.content}}</td>\r\n                      <td>{{cargo.size}}</td>\r\n                      <td>{{cargo.status}}</td>\r\n                      <td>\r\n                          <button data-bs-toggle=\"modal\" (click)=\"addDriver(cargo)\" data-bs-target=\"#driverModal\" class=\"btn btn-primary\">Assign</button>\r\n                      </td>\r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n      </div>\r\n  </div>\r\n  \r\n</div>\r\n\r\n\r\n<div class=\"modal fade\" id=\"driverModal\" tabindex=\"-1\" aria-labelledby=\"driverModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"driverModalLabel\">Assign Driver </h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\"> \r\n        <select [(ngModel)]=\"assignModel.driverId\"  class=\"form-control\" name=\"\" id=\"\">\r\n          <option value=\"null\">Choose Driver</option>\r\n           <option *ngFor=\"let driver of driverList\" value={{driver.id}}>{{driver.name}}</option>\r\n          \r\n        </select>\r\n       \r\n        <!-- //create select which shows driver list -->\r\n         \r\n        \r\n          <div *ngIf=\"showMessage\" class=\"alert alert-success mt-4\" role=\"alert\">\r\n              {{responseMessage}}\r\n            </div>\r\n            <div *ngIf=\"showError\" class=\"alert alert-danger\" role=\"alert\">\r\n              {{errorMessage}}\r\n            </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"assignDriver()\" >Save</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}