{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/http.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../services/auth.service\";\nimport * as i5 from \"@angular/common\";\nfunction AssginCargoComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AssginCargoComponent_tr_23_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const cargo_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.addStatus(cargo_r3));\n    });\n    i0.ɵɵtext(11, \"Update Status\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cargo_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cargo_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cargo_r3.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cargo_r3.size);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cargo_r3.status);\n  }\n}\nfunction AssginCargoComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.responseMessage, \" \");\n  }\n}\nfunction AssginCargoComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.errorMessage, \" \");\n  }\n}\nexport class AssginCargoComponent {\n  constructor(router, httpService, formBuilder, authService) {\n    this.router = router;\n    this.httpService = httpService;\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.showError = false;\n    this.cargList = [];\n    this.statusModel = {};\n  }\n  ngOnInit() {\n    this.getAssginCargo();\n    this.statusModel.newStatus = null;\n  }\n  getAssginCargo() {\n    this.cargList = [];\n    this.httpService.getAssignOrders(2).subscribe(data => {\n      this.cargList = data;\n      console.log(this.cargList);\n    }, error => {\n      // Handle error\n      this.showError = true;\n      this.errorMessage = \"An error occurred while logging in. Please try again later.\";\n      console.error('Login error:', error);\n    });\n    ;\n  }\n  addStatus(value) {\n    this.statusModel.cargoId = value.id;\n  }\n  assignDriver() {\n    if (this.statusModel.newStatus != null) {\n      this.httpService.updateCargoStatus(this.statusModel.cargoId, this.statusModel.newStatus).subscribe(data => {\n        debugger;\n        this.showMessage = true;\n        console.log('aa');\n        //this.responseMessage=data;\n        this.getAssginCargo();\n      }, error => {\n        // Handle error\n        this.showError = true;\n        this.errorMessage = \"Please try again later.\";\n        console.error('Login error:', error);\n      });\n      ;\n    }\n  }\n  static #_ = this.ɵfac = function AssginCargoComponent_Factory(t) {\n    return new (t || AssginCargoComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AssginCargoComponent,\n    selectors: [[\"app-assgin-cargo\"]],\n    decls: 48,\n    vars: 4,\n    consts: [[1, \"d-flex\", \"justify-content-between\", \"mt-4\"], [1, \"mb-0\"], [1, \"row\", \"mt-3\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"driverModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"driverModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"driverModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"name\", \"\", \"id\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"null\"], [\"value\", \"Order Pending\"], [\"value\", \"Order Assigned\"], [\"value\", \"Order Delivered\"], [\"class\", \"alert alert-success mt-4\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#driverModal\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"mt-4\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n    template: function AssginCargoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Manage Cargo\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4);\n        i0.ɵɵtext(6, \"Assign Cargo Information\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"table\", 7)(10, \"thead\")(11, \"tr\")(12, \"th\");\n        i0.ɵɵtext(13, \"Sr#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Size\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"tbody\");\n        i0.ɵɵtemplate(23, AssginCargoComponent_tr_23_Template, 12, 4, \"tr\", 8);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(24, \"div\", 9)(25, \"div\", 10)(26, \"div\", 11)(27, \"div\", 12)(28, \"h5\", 13);\n        i0.ɵɵtext(29, \"Update Status \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"button\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 15)(32, \"select\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function AssginCargoComponent_Template_select_ngModelChange_32_listener($event) {\n          return ctx.statusModel.newStatus = $event;\n        });\n        i0.ɵɵelementStart(33, \"option\", 17);\n        i0.ɵɵtext(34, \"Choose Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"option\", 18);\n        i0.ɵɵtext(36, \"Order Pending\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"option\", 19);\n        i0.ɵɵtext(38, \"Order In Transit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"option\", 20);\n        i0.ɵɵtext(40, \"Order Delivered\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(41, AssginCargoComponent_div_41_Template, 2, 1, \"div\", 21);\n        i0.ɵɵtemplate(42, AssginCargoComponent_div_42_Template, 2, 1, \"div\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 23)(44, \"button\", 24);\n        i0.ɵɵtext(45, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"button\", 25);\n        i0.ɵɵlistener(\"click\", function AssginCargoComponent_Template_button_click_46_listener() {\n          return ctx.assignDriver();\n        });\n        i0.ɵɵtext(47, \"Save\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cargList);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.statusModel.newStatus);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;IAuBkBA,0BAAoC;IAC5BA,YAAY;IAAAA,iBAAK;IACrBA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IAC+BA;MAAA;MAAA;MAAA;MAAA,OAASA,yCAAgB;IAAA,EAAC;IAAuDA,8BAAa;IAAAA,iBAAS;;;;IALtIA,eAAY;IAAZA,iCAAY;IACZA,eAAiB;IAAjBA,sCAAiB;IACjBA,eAAc;IAAdA,mCAAc;IACdA,eAAgB;IAAhBA,qCAAgB;;;;;IA6BhCA,+BAAuE;IACnEA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,uDACF;;;;;IACAA,+BAA+D;IAC7DA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,oDACF;;;AClDZ,OAAM,MAAOC,oBAAoB;EAU/BC,YAAmBC,MAAa,EAASC,WAAuB,EAAUC,WAAwB,EAAUC,WAAuB;IAAhH,WAAM,GAANH,MAAM;IAAgB,gBAAW,GAAXC,WAAW;IAAsB,gBAAW,GAAXC,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IAPvH,cAAS,GAAS,KAAK;IAEvB,aAAQ,GAAK,EAAE;IACf,gBAAW,GAAM,EAAE;EAMnB;EACAC,QAAQ;IACP,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,WAAW,CAACC,SAAS,GAAC,IAAI;EAChC;EACAF,cAAc;IACZ,IAAI,CAACG,QAAQ,GAAC,EAAE;IAChB,IAAI,CAACP,WAAW,CAACQ,eAAe,CAAC,CAAC,CAAC,CAACC,SAAS,CAAEC,IAAS,IAAI;MAC1D,IAAI,CAACH,QAAQ,GAACG,IAAI;MAClBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,QAAQ,CAAC;IAC5B,CAAC,EAAEM,KAAK,IAAG;MACT;MACA,IAAI,CAACC,SAAS,GAAG,IAAI;MACrB,IAAI,CAACC,YAAY,GAAG,6DAA6D;MACjFJ,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC,CAAC,CAAC;IAAC;EACL;EACAG,SAAS,CAACC,KAAS;IAEjB,IAAI,CAACZ,WAAW,CAACa,OAAO,GAACD,KAAK,CAACE,EAAE;EACnC;EACAC,YAAY;IAEV,IAAG,IAAI,CAACf,WAAW,CAACC,SAAS,IAAE,IAAI,EACnC;MACE,IAAI,CAACN,WAAW,CAACqB,iBAAiB,CAAC,IAAI,CAAChB,WAAW,CAACa,OAAO,EAAC,IAAI,CAACb,WAAW,CAACC,SAAS,CAAC,CAACG,SAAS,CAAEC,IAAS,IAAI;QAC9G;QACA,IAAI,CAACY,WAAW,GAAG,IAAI;QACvBX,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;QACjB;QACA,IAAI,CAACR,cAAc,EAAE;MACvB,CAAC,EAAES,KAAK,IAAG;QACT;QACA,IAAI,CAACC,SAAS,GAAG,IAAI;QACrB,IAAI,CAACC,YAAY,GAAG,yBAAyB;QAC7CJ,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC,CAAC,CAAC;MAAC;;EAEP;EAAC;qBAlDUhB,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAA0B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDXjC/B,8BAAiD;QAC9BA,4BAAY;QAAAA,iBAAK;QAIpCA,8BAAsB;QAESA,wCAAwB;QAAAA,iBAAM;QAE3DA,8BAAuB;QAKCA,oBAAG;QAAAA,iBAAK;QACZA,2BAAI;QAAAA,wBAAO;QAAAA,iBAAK;QAChBA,2BAAI;QAAAA,qBAAI;QAAAA,iBAAK;QACbA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QACfA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QAIvBA,8BAAO;QACHA,sEAQK;QACTA,iBAAQ;QAStBA,+BAA6G;QAIvDA,+BAAc;QAAAA,iBAAK;QACjEA,8BAA4F;QAC9FA,iBAAM;QACNA,gCAAwB;QACZA;UAAA;QAAA,EAAmC;QACzCA,mCAAqB;QAAAA,8BAAa;QAAAA,iBAAS;QAC1CA,mCAA8B;QAAAA,8BAAa;QAAAA,iBAAS;QACpDA,mCAA+B;QAAAA,iCAAgB;QAAAA,iBAAS;QACxDA,mCAAgC;QAAAA,gCAAe;QAAAA,iBAAS;QAG3DA,wEAEQ;QACNA,wEAEM;QACZA,iBAAM;QACNA,gCAA0B;QACgDA,sBAAK;QAAAA,iBAAS;QACtFA,mCAAwE;QAA1BA;UAAA,OAASgC,kBAAc;QAAA,EAAC;QAAEhC,qBAAI;QAAAA,iBAAS;;;QA1CrDA,gBAAW;QAAXA,sCAAW;QA0BjCA,eAAmC;QAAnCA,mDAAmC;QAOrCA,eAAiB;QAAjBA,sCAAiB;QAGfA,eAAe;QAAfA,oCAAe","names":["i0","AssginCargoComponent","constructor","router","httpService","formBuilder","authService","ngOnInit","getAssginCargo","statusModel","newStatus","cargList","getAssignOrders","subscribe","data","console","log","error","showError","errorMessage","addStatus","value","cargoId","id","assignDriver","updateCargoStatus","showMessage","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ubuntu/root/client/src/app/assgin-cargo/assgin-cargo.component.html","/home/ubuntu/root/client/src/app/assgin-cargo/assgin-cargo.component.ts"],"sourcesContent":["<div class=\"d-flex justify-content-between mt-4\">\r\n  <h2 class=\"mb-0\">Manage Cargo</h2>  \r\n\r\n</div>\r\n\r\n<div class=\"row mt-3\">\r\n  <div class=\"card\">\r\n      <div class=\"card-header\">Assign Cargo Information</div>\r\n  </div>\r\n  <div class=\"card-body\">\r\n      <div class=\"table-responsive\">\r\n          <table class=\"table\">\r\n              <thead>\r\n                  <tr>\r\n                      <th>Sr#</th>\r\n                      <th>Content</th>\r\n                      <th>Size</th>\r\n                      <th>Status</th>\r\n                      <th>Action</th>\r\n                    \r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                  <tr *ngFor=\"let cargo of cargList \">\r\n                      <td>{{cargo.id}}</td>\r\n                      <td>{{cargo.content}}</td>\r\n                      <td>{{cargo.size}}</td>\r\n                      <td>{{cargo.status}}</td>\r\n                      <td>\r\n                          <button data-bs-toggle=\"modal\" (click)=\"addStatus(cargo)\" data-bs-target=\"#driverModal\" class=\"btn btn-primary\">Update Status</button>\r\n                      </td>\r\n                  </tr>\r\n              </tbody>\r\n          </table>\r\n      </div>\r\n  </div>\r\n  \r\n</div>\r\n\r\n\r\n\r\n<div class=\"modal fade\" id=\"driverModal\" tabindex=\"-1\" aria-labelledby=\"driverModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"driverModalLabel\">Update Status </h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n          <select [(ngModel)]=\"statusModel.newStatus\"  class=\"form-control\" name=\"\" id=\"\">\r\n            <option value=\"null\">Choose Status</option>\r\n             <option value=\"Order Pending\">Order Pending</option>\r\n             <option value=\"Order Assigned\">Order In Transit</option>\r\n             <option value=\"Order Delivered\">Order Delivered</option>\r\n          </select>\r\n\r\n          <div *ngIf=\"showMessage\" class=\"alert alert-success mt-4\" role=\"alert\">\r\n              {{responseMessage}}\r\n            </div>\r\n            <div *ngIf=\"showError\" class=\"alert alert-danger\" role=\"alert\">\r\n              {{errorMessage}}\r\n            </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"assignDriver()\" >Save</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { HttpService } from '../../services/http.service';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-assgin-cargo',\r\n  templateUrl: './assgin-cargo.component.html',\r\n  styleUrls: ['./assgin-cargo.component.scss']\r\n})\r\nexport class AssginCargoComponent {\r\n  \r\n\r\n  showError:boolean=false;\r\n  errorMessage:any;\r\n  cargList:any=[];\r\n  statusModel: any={};\r\n  showMessage: any;\r\n  responseMessage: any;\r\n\r\n  constructor(public router:Router, public httpService:HttpService, private formBuilder: FormBuilder, private authService:AuthService) \r\n  {\r\n  }\r\n  ngOnInit(): void {\r\n   this.getAssginCargo();\r\n   this.statusModel.newStatus=null;\r\n  }\r\n  getAssginCargo() {\r\n    this.cargList=[];\r\n    this.httpService.getAssignOrders(2).subscribe((data: any) => {\r\n      this.cargList=data;\r\n      console.log(this.cargList);\r\n    }, error => {\r\n      // Handle error\r\n      this.showError = true;\r\n      this.errorMessage = \"An error occurred while logging in. Please try again later.\";\r\n      console.error('Login error:', error);\r\n    });;\r\n  }\r\n  addStatus(value:any)\r\n  {\r\n    this.statusModel.cargoId=value.id\r\n  }\r\n  assignDriver()\r\n  {\r\n    if(this.statusModel.newStatus!=null)\r\n    {\r\n      this.httpService.updateCargoStatus(this.statusModel.cargoId,this.statusModel.newStatus).subscribe((data: any) => {\r\n        debugger;\r\n        this.showMessage = true;\r\n        console.log('aa')\r\n        //this.responseMessage=data;\r\n        this.getAssginCargo();\r\n      }, error => {\r\n        // Handle error\r\n        this.showError = true;\r\n        this.errorMessage = \"Please try again later.\";\r\n        console.error('Login error:', error);\r\n      });;\r\n    }\r\n  }\r\n\r\n\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}