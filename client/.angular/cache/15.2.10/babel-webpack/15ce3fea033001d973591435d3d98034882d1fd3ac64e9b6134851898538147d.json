{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/http.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../services/auth.service\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_p_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 21);\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_p_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 21);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.errorMessage, \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(router, httpService, formBuilder, authService) {\n    this.router = router;\n    this.httpService = httpService;\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.formModel = {};\n    this.showError = false;\n    this.itemForm = this.formBuilder.group({\n      username: [this.formModel.username, [Validators.required]],\n      password: [this.formModel.password, [Validators.required]]\n    });\n  }\n  ngOnInit() {}\n  onLogin() {\n    if (this.itemForm.valid) {\n      this.showError = false;\n      this.httpService.Login(this.itemForm.value).subscribe(data => {\n        if (data.userNo != 0) {\n          debugger;\n          // localStorage.setItem('role', data.role);\n          this.authService.SetRole(data.role);\n          this.authService.saveToken(data.token);\n          this.router.navigateByUrl('/dashboard');\n          setTimeout(() => {\n            window.location.reload();\n          }, 1000);\n        } else {\n          this.showError = true;\n          this.errorMessage = \"Wrong User or Password\";\n        }\n      }, error => {\n        // Handle error\n        this.showError = true;\n        this.errorMessage = \"An error occurred while logging in. Please try again later.\";\n        console.error('Login error:', error);\n      });\n      ;\n    } else {\n      this.itemForm.markAllAsTouched();\n    }\n  }\n  registration() {\n    this.router.navigateByUrl('/registration');\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 31,\n    vars: 4,\n    consts: [[1, \"vh-100\", \"d-flex\", \"justify-content-center\", \"align-items-center\"], [1, \"container\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"mt-5\"], [1, \"col-12\", \"col-md-8\", \"col-lg-6\"], [1, \"border\", \"border-3\"], [1, \"card\", \"bg-white\"], [1, \"card-body\", \"p-5\"], [1, \"item-Form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"fw-bold\", \"mb-2\", \"text-uppercase\", \"text-center\"], [1, \"mb-5\", \"text-center\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"username\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"formControlName\", \"password\"], [1, \"d-grid\"], [\"type\", \"submit\", \"id\", \"loginbtn\", \"mdbRipple\", \"\", \"rippleColor\", \"dark\", 1, \"btn\", \"btn-outline-dark\", \"btn-rounded\"], [1, \"mb-0\", \"text-center\"], [1, \"text-primary\", \"fw-bold\", 3, \"click\"], [\"class\", \"alert alert-success mt-4\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"error\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"mt-4\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6)(7, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(8, \"h2\", 8);\n        i0.ɵɵtext(9, \"Logistic Management System\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\", 9);\n        i0.ɵɵtext(11, \"Please enter your user and password!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 11);\n        i0.ɵɵtext(14, \"Username: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 12);\n        i0.ɵɵtemplate(16, LoginComponent_p_16_Template, 2, 0, \"p\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 10)(18, \"label\", 14);\n        i0.ɵɵtext(19, \"Password: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 15);\n        i0.ɵɵtemplate(21, LoginComponent_p_21_Template, 2, 0, \"p\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 16)(23, \"button\", 17);\n        i0.ɵɵtext(24, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\")(26, \"p\", 18);\n        i0.ɵɵtext(27, \"Don't have an account? \");\n        i0.ɵɵelementStart(28, \"a\", 19);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_a_click_28_listener() {\n          return ctx.registration();\n        });\n        i0.ɵɵtext(29, \"Registration\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(30, LoginComponent_div_30_Template, 2, 1, \"div\", 20);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.itemForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.itemForm.controls[\"username\"][\"touched\"] && ctx.itemForm.controls[\"username\"].errors && ctx.itemForm.controls[\"username\"].errors[\"required\"]);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.itemForm.controls[\"password\"][\"touched\"] && ctx.itemForm.controls[\"password\"].errors && ctx.itemForm.controls[\"password\"].errors[\"required\"]);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n      }\n    },\n    dependencies: [i5.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"a[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJhe1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","LoginComponent","constructor","router","httpService","formBuilder","authService","itemForm","group","username","formModel","required","password","ngOnInit","onLogin","valid","showError","Login","value","subscribe","data","userNo","SetRole","role","saveToken","token","navigateByUrl","setTimeout","window","location","reload","errorMessage","error","console","markAllAsTouched","registration","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ubuntu/root/client/src/app/login/login.component.ts","/home/ubuntu/root/client/src/app/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpService } from '../../services/http.service';\nimport { AuthService } from '../../services/auth.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  itemForm: FormGroup;\n  formModel:any={};\n  showError:boolean=false;\n  errorMessage:any;\n  constructor(public router:Router, public httpService:HttpService, private formBuilder: FormBuilder, private authService:AuthService) \n    {\n      this.itemForm = this.formBuilder.group({\n        username: [this.formModel.username,[ Validators.required]],\n        password: [this.formModel.password,[ Validators.required]],\n       \n    });\n  }\n\n  ngOnInit(): void {\n  }\n  onLogin() {\n  if (this.itemForm.valid) {\n    this.showError = false;\n    this.httpService.Login(this.itemForm.value).subscribe((data: any) => {\n      if (data.userNo != 0) {\n        debugger;\n    \n        // localStorage.setItem('role', data.role);\n        this.authService.SetRole(data.role);\n        this.authService.saveToken(data.token)\n        this.router.navigateByUrl('/dashboard');\n      \n        \n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      } else {\n        this.showError = true;\n        this.errorMessage = \"Wrong User or Password\";\n      }\n    }, error => {\n      // Handle error\n      this.showError = true;\n      this.errorMessage = \"An error occurred while logging in. Please try again later.\";\n      console.error('Login error:', error);\n    });;\n  } else {\n    this.itemForm.markAllAsTouched();\n  }\n}\n\nregistration()\n  {\n    this.router.navigateByUrl('/registration');\n  }\n}\n","<div class=\"vh-100 d-flex justify-content-center align-items-center\">\n  <div class=\"container\">\n    <div class=\"row d-flex justify-content-center mt-5\">\n      <div class=\"col-12 col-md-8 col-lg-6\">\n        <div class=\"border border-3 \"></div>\n        <div class=\"card bg-white\">\n          <div class=\"card-body p-5\">\n            <form class=\"item-Form\" [formGroup]=\"itemForm\" (ngSubmit)=\"onLogin()\">\n              <h2 class=\"fw-bold mb-2 text-uppercase text-center\">Logistic Management System</h2>\n              <p class=\" mb-5 text-center\">Please enter your user and password!</p>\n              <div class=\"mb-3\">\n                <label for=\"username\" class=\"form-label \">Username: </label>\n                \n                <!-- //create input with formControlName username -->\n                <input type=\"text\" formControlName=\"username\">\n                <p class=\"error\" *ngIf=\"\n                    itemForm.controls['username']['touched'] &&\n                    itemForm.controls['username'].errors &&\n                    itemForm.controls['username'].errors['required']\n                  \">\n                  Username is required\n                </p>\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"password\" class=\"form-label \">Password: </label>\n                <!-- //create input with formControlName password -->\n                \n                <input type=\"password\" formControlName=\"password\">\n\n                <p class=\"error\" *ngIf=\"\n                        itemForm.controls['password']['touched'] &&\n                        itemForm.controls['password'].errors &&\n                        itemForm.controls['password'].errors['required']\n                      \">\n                  Password is required\n                </p>\n\n              </div>\n\n              <div class=\"d-grid\">\n                <button type=\"submit\" id=\"loginbtn\" class=\"btn btn-outline-dark btn-rounded\" mdbRipple rippleColor=\"dark\" >Login</button>\n                <!-- <button class=\"btn btn-outline-dark\" type=\"submit\">Login</button> -->\n              </div>\n            </form>\n            <div>\n              <p class=\"mb-0  text-center\">Don't have an account? <a (click)=\"registration()\"\n                  class=\"text-primary fw-bold\">Registration</a></p>\n            </div>\n            <div *ngIf=\"showError\" class=\"alert alert-success mt-4\" role=\"alert\">\n              {{errorMessage}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}