{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/http.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction RegistrationComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"span\", 31);\n    i0.ɵɵtext(2, \"Please Enter Username\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegistrationComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"span\", 31);\n    i0.ɵɵtext(2, \"Please Enter Valid Username\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegistrationComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"span\", 31);\n    i0.ɵɵtext(2, \"Please Enter Email\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegistrationComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"span\", 31);\n    i0.ɵɵtext(2, \"Enter valid email\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegistrationComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"span\", 31);\n    i0.ɵɵtext(2, \"Please Enter Password.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegistrationComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"span\", 31);\n    i0.ɵɵtext(2, \"Enter valid password\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegistrationComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"span\", 31);\n    i0.ɵɵtext(2, \"Please choose role.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegistrationComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.responseMessage, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"/login\"];\n};\nexport class RegistrationComponent {\n  constructor(router, httpService, formBuilder) {\n    this.router = router;\n    this.httpService = httpService;\n    this.formBuilder = formBuilder;\n    this.formModel = {\n      role: null,\n      email: '',\n      password: '',\n      username: ''\n    };\n    this.showMessage = false;\n    this.itemForm = this.formBuilder.group({\n      username: [this.formModel.username, [Validators.required, Validators.pattern(\"^[A-Za-z]\\\\w{5,19}$\")]],\n      email: [this.formModel.email, [Validators.required, Validators.email]],\n      password: [this.formModel.password, [Validators.required, Validators.pattern(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$\")]],\n      role: [this.formModel.role, [Validators.required]]\n      //complete this function \n    });\n  }\n\n  ngOnInit() {}\n  onRegister() {\n    if (this.itemForm.valid) {\n      this.showMessage = false;\n      this.httpService.registerUser(this.itemForm.value).subscribe(data => {\n        debugger;\n        this.showMessage = true;\n        this.responseMessage = 'Welcome ' + data.name + \", you are successfully registered\";\n        this.itemForm.reset();\n      }, error => {});\n    } else {\n      this.itemForm.markAllAsTouched();\n    }\n    //complete this function \n  }\n  static #_ = this.ɵfac = function RegistrationComponent_Factory(t) {\n    return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationComponent,\n    selectors: [[\"app-registration\"]],\n    decls: 51,\n    vars: 11,\n    consts: [[1, \"vh-100\", \"d-flex\", \"justify-content-center\", \"align-items-center\"], [1, \"container\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"mt-5\"], [1, \"col-12\", \"col-md-8\", \"col-lg-6\"], [1, \"border\", \"border-3\"], [1, \"card\", \"bg-white\"], [1, \"card-body\", \"p-3\"], [1, \"mb-3\", \"mt-md-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"fw-bold\", \"mb-2\", \"text-uppercase\"], [1, \"mb-5\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"username\", \"formControlName\", \"username\", \"id\", \"username\", \"placeholder\", \"Username\", 1, \"form-control\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", \"placeholder\", \"name@example.com\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"placeholder\", \"*******\", 1, \"form-control\"], [\"for\", \"Role\", 1, \"form-label\"], [\"formControlName\", \"role\", \"placeholder\", \"*******\", 1, \"form-control\"], [\"value\", \"null\"], [\"value\", \"BUSINESS\"], [\"value\", \"DRIVER\"], [\"value\", \"CUSTOMER\"], [\"class\", \"ng-dirty\", 4, \"ngIf\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-dark\"], [1, \"mb-0\", \"text-center\"], [1, \"text-primary\", \"fw-bold\", 3, \"routerLink\"], [\"class\", \"alert alert-success mt-4\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"error\"], [1, \"text-danger\"], [1, \"ng-dirty\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"mt-4\"]],\n    template: function RegistrationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6)(7, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onRegister();\n        });\n        i0.ɵɵelementStart(8, \"h2\", 8);\n        i0.ɵɵtext(9, \"Logistic Management System\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\", 9);\n        i0.ɵɵtext(11, \"Please enter your details here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 11);\n        i0.ɵɵtext(14, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 12);\n        i0.ɵɵtemplate(16, RegistrationComponent_div_16_Template, 3, 0, \"div\", 13);\n        i0.ɵɵtemplate(17, RegistrationComponent_div_17_Template, 3, 0, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 10)(19, \"label\", 14);\n        i0.ɵɵtext(20, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 15);\n        i0.ɵɵtemplate(22, RegistrationComponent_div_22_Template, 3, 0, \"div\", 13);\n        i0.ɵɵtemplate(23, RegistrationComponent_div_23_Template, 3, 0, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 10)(25, \"label\", 16);\n        i0.ɵɵtext(26, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 17);\n        i0.ɵɵtemplate(28, RegistrationComponent_div_28_Template, 3, 0, \"div\", 13);\n        i0.ɵɵtemplate(29, RegistrationComponent_div_29_Template, 3, 0, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 10)(31, \"label\", 18);\n        i0.ɵɵtext(32, \"Role\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"select\", 19)(34, \"option\", 20);\n        i0.ɵɵtext(35, \"Choose User Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"option\", 21);\n        i0.ɵɵtext(37, \"BUSINESS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"option\", 22);\n        i0.ɵɵtext(39, \"DRIVER\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"option\", 23);\n        i0.ɵɵtext(41, \"CUSTOMER\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(42, RegistrationComponent_div_42_Template, 3, 0, \"div\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 25)(44, \"button\", 26);\n        i0.ɵɵtext(45, \"Submit\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(46, \"div\")(47, \"p\", 27)(48, \"a\", 28);\n        i0.ɵɵtext(49, \"Go to Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(50, RegistrationComponent_div_50_Template, 2, 1, \"div\", 29);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_5_0;\n        let tmp_6_0;\n        let tmp_7_0;\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.itemForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.itemForm.get(\"username\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx.itemForm.get(\"username\")) == null ? null : tmp_1_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.itemForm.get(\"username\")) == null ? null : tmp_2_0.hasError(\"pattern\")) && ((tmp_2_0 = ctx.itemForm.get(\"username\")) == null ? null : tmp_2_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.itemForm.get(\"email\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx.itemForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.itemForm.get(\"email\")) == null ? null : tmp_4_0.hasError(\"email\")) && ((tmp_4_0 = ctx.itemForm.get(\"email\")) == null ? null : tmp_4_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.itemForm.get(\"password\")) == null ? null : tmp_5_0.hasError(\"required\")) && ((tmp_5_0 = ctx.itemForm.get(\"password\")) == null ? null : tmp_5_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.itemForm.get(\"password\")) == null ? null : tmp_6_0.hasError(\"pattern\")) && ((tmp_6_0 = ctx.itemForm.get(\"password\")) == null ? null : tmp_6_0.touched));\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.itemForm.get(\"role\")) == null ? null : tmp_7_0.invalid) && (((tmp_7_0 = ctx.itemForm.get(\"role\")) == null ? null : tmp_7_0.dirty) || ((tmp_7_0 = ctx.itemForm.get(\"role\")) == null ? null : tmp_7_0.touched)));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c0));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMessage);\n      }\n    },\n    dependencies: [i4.NgIf, i1.RouterLink, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","RegistrationComponent","constructor","router","httpService","formBuilder","role","email","password","username","itemForm","group","formModel","required","pattern","ngOnInit","onRegister","valid","showMessage","registerUser","value","subscribe","data","responseMessage","name","reset","error","markAllAsTouched","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/ubuntu/root/client/src/app/registration/registration.component.ts","/home/ubuntu/root/client/src/app/registration/registration.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { HttpService } from '../../services/http.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss']\r\n})\r\nexport class RegistrationComponent {\r\n\r\n  itemForm: FormGroup;\r\n  formModel:any={role:null,email:'',password:'',username:''};\r\n  showMessage:boolean=false;\r\n\r\n  responseMessage: any;\r\n  constructor(public router:Router, private httpService:HttpService, private formBuilder: FormBuilder) { \r\n    \r\n    this.itemForm = this.formBuilder.group({\r\n      username:[this.formModel.username,[Validators.required,Validators.pattern(\"^[A-Za-z]\\\\w{5,19}$\")]],\r\n      email:[this.formModel.email,[Validators.required,Validators.email]],\r\n      password:[this.formModel.password,[Validators.required,Validators.pattern(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$\")]],\r\n      role:[this.formModel.role,[Validators.required]]\r\n    //complete this function \r\n     \r\n  });\r\n}\r\n  ngOnInit(): void {\r\n  }\r\n  onRegister()\r\n  {\r\n    if(this.itemForm.valid)\r\n    {\r\n      this.showMessage=false;\r\n      this.httpService.registerUser(this.itemForm.value).subscribe(data=>{    \r\n        debugger;\r\n        this.showMessage=true;\r\n        this.responseMessage='Welcome '+data.name+\", you are successfully registered\";\r\n        this.itemForm.reset();\r\n        \r\n      },error=>{ })\r\n    }\r\n    else{\r\n      this.itemForm.markAllAsTouched();\r\n    }\r\n  //complete this function \r\n  }\r\n\r\n\r\n}\r\n","<div class=\"vh-100 d-flex justify-content-center align-items-center\">\r\n  <div class=\"container\">\r\n    <div class=\"row d-flex justify-content-center mt-5\">\r\n      <div class=\"col-12 col-md-8 col-lg-6\">\r\n        <div class=\"border border-3 \"></div>\r\n        <div class=\"card bg-white\">\r\n          <div class=\"card-body p-3\">\r\n\r\n            <form class=\"mb-3 mt-md-4\" [formGroup]=\"itemForm\" (ngSubmit)=\"onRegister()\">\r\n              <h2 class=\"fw-bold mb-2 text-uppercase \">Logistic Management System</h2>\r\n              <p class=\" mb-5\">Please enter your details here</p>\r\n              <div class=\"mb-3\">\r\n                <label for=\"username\" class=\"form-label \">Username</label>\r\n               <!-- //create input with  formControlName=\"username\" -->\r\n               <input type=\"text\" name=\"username\" formControlName=\"username\" class=\"form-control\" id=\"username\"\r\n                  placeholder=\"Username\">\r\n                <div\r\n                *ngIf=\"itemForm.get('username')?.hasError('required') && itemForm.get('username')?.touched\" class=\"error\">\r\n                <span class=\"text-danger\">Please Enter Username</span></div>\r\n                <div *ngIf=\"itemForm.get('username')?.hasError('pattern') && itemForm.get('username')?.touched\" class=\"error\">\r\n                <span class=\"text-danger\">Please Enter Valid Username</span>\r\n                </div>\r\n              \r\n              </div>\r\n\r\n              <div class=\"mb-3\">\r\n                <label for=\"email\" class=\"form-label \">Email address</label>\r\n                 <!-- //create input with  formControlName=\"email\" -->\r\n                 <input type=\"email\" name=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\"\r\n                 placeholder=\"name@example.com\">\r\n               <div\r\n               *ngIf=\"itemForm.get('email')?.hasError('required') && itemForm.get('email')?.touched\" class=\"error\">\r\n               <span class=\"text-danger\">Please Enter Email</span></div>\r\n                <div *ngIf=\"itemForm.get('email')?.hasError('email') && itemForm.get('email')?.touched\" class=\"error\">\r\n               <span class=\"text-danger\">Enter valid email</span>\r\n               </div>\r\n               \r\n\r\n              </div>\r\n\r\n              <div class=\"mb-3\">\r\n                <label for=\"password\" class=\"form-label \">Password</label>\r\n                  <!-- //create input with  formControlName=\"password\" -->\r\n                  <input type=\"password\" name=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\"\r\n                  placeholder=\"*******\">\r\n                <div\r\n                *ngIf=\"itemForm.get('password')?.hasError('required') && itemForm.get('password')?.touched\" class=\"error\">\r\n                <span class=\"text-danger\">Please Enter Password.</span></div>\r\n                <div *ngIf=\"itemForm.get('password')?.hasError('pattern') && itemForm.get('password')?.touched\" class=\"error\">\r\n                <span class=\"text-danger\">Enter valid password</span>\r\n                </div>\r\n                \r\n              </div>\r\n\r\n              <div class=\"mb-3\">\r\n               \r\n                  <label for=\"Role\" class=\"form-label \">Role</label>\r\n                <select class=\"form-control\" formControlName=\"role\" placeholder=\"*******\">\r\n                  <option value=\"null\">Choose User Type</option>\r\n                  <option value=\"BUSINESS\">BUSINESS</option>\r\n                  <option value=\"DRIVER\">DRIVER</option>\r\n                  <option value=\"CUSTOMER\">CUSTOMER</option>\r\n                </select>\r\n\r\n             \r\n                <div\r\n                *ngIf=\"itemForm.get('role')?.invalid && (itemForm.get('role')?.dirty || itemForm.get('role')?.touched)\"\r\n                class=\"ng-dirty\">\r\n                <span class=\"text-danger\">Please choose role.</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"d-grid\">\r\n                <button class=\"btn btn-outline-dark\" type=\"submit\">Submit</button>\r\n              </div>\r\n            </form>\r\n            <div>\r\n              <p class=\"mb-0  text-center\"> <a [routerLink]=\"['/login']\" class=\"text-primary fw-bold\">Go to\r\n                  Login</a></p>\r\n            </div>\r\n            <div *ngIf=\"showMessage\" class=\"alert alert-success mt-4\" role=\"alert\">\r\n              {{responseMessage}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}